services:
  hallo_verden.access_definitions.service:
    class: HalloVerden\AccessDefinitionsBundle\Services\AccessDefinitionService
    arguments:
      $metadataFactory: '@hallo_verden.access_definitions.metadata.factory'
      $accessDeciderService: '@hallo_verden.access_definitions.service.access_decider'

  hallo_verden.access_definitions.service.access_decider:
    class: HalloVerden\AccessDefinitionsBundle\Services\AccessDefinitionAccessDeciderService
    arguments:
      $defaultStrategy: !php/const HalloVerden\AccessDefinitionsBundle\Strategy\UnanimousStrategy::NAME
      $strategies: !tagged_iterator { tag: 'hallo_verden.access_definitions.strategy', index_by: 'key' }

  hallo_verden.access_definitions.service.filter:
    class: HalloVerden\AccessDefinitionsBundle\Services\AccessDefinitionFilterService
    arguments:
      $accessDefinitionService: '@hallo_verden.access_definitions.service'

  hallo_verden.access_definitions.metadata.factory:
    class: Metadata\MetadataFactory
    arguments:
      $driver: '@hallo_verden.access_definitions.metadata.driver.yaml'

  hallo_verden.access_definitions.metadata.file_locator:
    class: Metadata\Driver\FileLocator
    arguments:
      $dirs: []

  hallo_verden.access_definitions.metadata.driver.yaml:
    class: HalloVerden\AccessDefinitionsBundle\Metadata\Drivers\AccessDefinitionYamlDriver
    arguments:
      $locator: '@hallo_verden.access_definitions.metadata.file_locator'

  hallo_verden.access_definitions.constraints.has_access:
    class: HalloVerden\AccessDefinitionsBundle\Constraints\HasAccessValidator
    arguments:
      $accessDefinitionService: '@hallo_verden.access_definitions.service'
    tags:
      - { name: validator.constraint_validator }

  hallo_verden.access_definitions.expression_functions.has_access:
    class: HalloVerden\AccessDefinitionsBundle\Jms\ExpressionLanguage\ExpressionFunction\HasAccessFunction
    arguments:
      $accessDefinitionService: '@hallo_verden.access_definitions.service'
      $tokenStorage: '@security.token_storage'

  hallo_verden.access_definitions.expression_function_provider:
    class: HalloVerden\AccessDefinitionsBundle\Jms\ExpressionLanguage\AccessDefinitionExpressionLanguageProvider
    arguments:
      $hasAccessFunction: '@hallo_verden.access_definitions.expression_functions.has_access'

  hallo_verden.access_definitions.event_listener.access_definable:
    class: HalloVerden\AccessDefinitionsBundle\EventListener\AccessDefinableListener
    arguments:
      $accessDefinitionFilterService: '@hallo_verden.access_definitions.service.filter'
    tags:
      - { name: kernel.event_subscriber }

  HalloVerden\AccessDefinitionsBundle\Interfaces\AccessDefinitionServiceInterface: '@hallo_verden.access_definitions.service'

  hallo_verden.access_definitions.metadata_checker.method:
    class: HalloVerden\AccessDefinitionsBundle\Checker\MethodChecker
    tags:
      - { name: 'hallo_verden.access_definitions.metadata_checker' }

  hallo_verden.access_definitions.metadata_checker.expression:
    class: HalloVerden\AccessDefinitionsBundle\Checker\ExpressionChecker
    tags:
      - { name: 'hallo_verden.access_definitions.metadata_checker' }

  hallo_verden.access_definitions.metadata_checker.scope:
    class: HalloVerden\AccessDefinitionsBundle\Checker\ScopeChecker
    arguments:
      $security: '@hallo_verden_voter.security'
    tags:
      - { name: 'hallo_verden.access_definitions.metadata_checker' }

  hallo_verden.access_definitions.metadata_checker.role:
    class: HalloVerden\AccessDefinitionsBundle\Checker\RoleChecker
    arguments:
      $security: '@hallo_verden_voter.security'
    tags:
      - { name: 'hallo_verden.access_definitions.metadata_checker' }

  hallo_verden.access_definitions.strategy.affirmative:
    class: HalloVerden\AccessDefinitionsBundle\Strategy\AffirmativeStrategy
    arguments:
      $metadataCheckers: !tagged_iterator { tag: 'hallo_verden.access_definitions.metadata_checker' }
    tags:
      - { name: 'hallo_verden.access_definitions.strategy', key: !php/const HalloVerden\AccessDefinitionsBundle\Strategy\AffirmativeStrategy::NAME }

  hallo_verden.access_definitions.strategy.unanimous:
    class: HalloVerden\AccessDefinitionsBundle\Strategy\UnanimousStrategy
    arguments:
      $metadataCheckers: !tagged_iterator { tag: 'hallo_verden.access_definitions.metadata_checker' }
    tags:
      - { name: 'hallo_verden.access_definitions.strategy', key: !php/const HalloVerden\AccessDefinitionsBundle\Strategy\UnanimousStrategy::NAME }
